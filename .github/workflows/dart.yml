name: "Run dart specific github actions"

on:
  workflow_call:
    inputs:
      env_file:
        description: "Path to an .env file to read flutter_version and/or dart_version from."
        type: string
        required: false
      directory:
        description: "The subdirectory for the dart project, defaults to the current directory."
        type: string
        required: false
        default: ""
    secrets:
      ssh_key:
        description: "SSH key to pull private dependencies"
        required: false

jobs:
  dart_analyzer:
    runs-on: ubuntu-latest
    env:
      env_file: ${{ inputs.env_file }}
    steps:
      - uses: actions/checkout@v4
      - name: Read env file
        if: env.env_file != ''
        run: cat ${{ env.env_file }} >> $GITHUB_ENV
      - uses: dart-lang/setup-dart@a57a6c04cf7d4840e88432aad6281d1e125f0d46
        if: env.dart_version != ''
        with:
          sdk: ${{ env.dart_version }}
      - uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa
        with:
          flutter-version: ${{ env.flutter_version }}
          cache: true
      - uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
      - name: Enable pulling private dependencies
        uses: famedly/frontend-ci-templates/.github/actions/dart-prepare@main
        with:
          ssh_key: "${{ secrets.ssh_key }}"
          container_mode: "false"
      - name: Fetch dependencies
        id: deps
        working-directory: ${{ inputs.directory }}
        run: |
          flutter pub get
      - name: Check formatting
        working-directory: ${{ inputs.directory }}
        run: |
          dart format lib/ test/ test_driver/ --set-exit-if-changed || (echo '```diff' >> "$GITHUB_STEP_SUMMARY"; git diff >> "$GITHUB_STEP_SUMMARY"; echo '```' >> "$GITHUB_STEP_SUMMARY"; exit 1)
      - name: Run analyzer
        working-directory: ${{ inputs.directory }}
        if: success() || (failure() && steps.deps.conclusion == 'success')
        run: |
          SCRIPT=$(cat << 'EOL'
          import json,sys,os

          obj = json.load(sys.stdin)

          diagnostics = obj["diagnostics"]

          if diagnostics:
              print('|severity|file|problem|suggestion|documentation|')
              print('|:--|:--|:--|:--|:--|')
          else:
              exit(0)

          sha = os.environ["GITHUB_SHA"]
          server = os.environ["GITHUB_SERVER_URL"]
          repo = os.environ["GITHUB_REPOSITORY"]
          workspace = os.environ["GITHUB_WORKSPACE"]

          for d in diagnostics:
              l = d["location"]

              file =l["file"].removeprefix(workspace + "/")
              start = str(l["range"]["start"]["line"])
              end = str(l["range"]["end"]["line"])

              location = f'[{file}:{start}]({server}/{repo}/blob/{sha}/{file}#L{start}-L{end})'

              print("", d["severity"], location, d.get("correctionMessage", "").replace("|", "\\|"), d.get("correctionMessage", "").replace("|", "\\|"), f'[{d["code"]}]({d["documentation"]})', "", sep="| ")
          exit(1)
          EOL
          )

          dart analyze --format=json | python3 -c "$SCRIPT" | tee -a "$GITHUB_STEP_SUMMARY"
          test ${PIPESTATUS[0]} -eq 0 -a ${PIPESTATUS[1]} -eq 0 -a ${PIPESTATUS[2]} -eq 0
      - name: Sort imports
        working-directory: ${{ inputs.directory }}
        if: success() || (failure() && steps.deps.conclusion == 'success')
        run: |
          if ! dart run import_sorter:main --no-comments --exit-if-changed
          then
            # run again, since exit-if-changed prevents formatting
            dart run import_sorter:main --no-comments
            echo '```diff' >> "$GITHUB_STEP_SUMMARY"
            git diff >> "$GITHUB_STEP_SUMMARY"
            echo '```' >> "$GITHUB_STEP_SUMMARY"
            exit 1
          fi
